{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/@firebase+ai@1.3.0_@firebase+app-types@0.9.3_@firebase+app@0.13.0/node_modules/@firebase/ai/dist/esm/index.esm2017.js", "../../../../../../node_modules/.pnpm/@angular+fire@19.2.0_@angular+common@19.2.15_@angular+core@19.2.15_@angular+platform-browser-_ptnhjgdhaa3bbt454zv56r6xce/node_modules/@angular/fire/fesm2022/angular-fire-ai.mjs"],
  "sourcesContent": ["import { _isFirebaseServerApp, _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\nimport { __asyncGenerator, __await } from 'tslib';\nvar name = \"@firebase/ai\";\nvar version = \"1.3.0\";\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst AI_TYPE = 'AI';\nconst DEFAULT_LOCATION = 'us-central1';\nconst DEFAULT_BASE_URL = 'https://firebasevertexai.googleapis.com';\nconst DEFAULT_API_VERSION = 'v1beta';\nconst PACKAGE_VERSION = version;\nconst LANGUAGE_TAG = 'gl-js';\nconst DEFAULT_FETCH_TIMEOUT_MS = 180 * 1000;\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = ['user', 'model', 'function', 'system'];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n  HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n  HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n  HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n  HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n  /**\n   * Content with `NEGLIGIBLE` will be allowed.\n   */\n  HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n  /**\n   * Content with `NEGLIGIBLE` and `LOW` will be allowed.\n   */\n  HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n  /**\n   * Content with `NEGLIGIBLE`, `LOW`, and `MEDIUM` will be allowed.\n   */\n  HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n  /**\n   * All content will be allowed.\n   */\n  HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * This property is not supported in the Gemini Developer API ({@link GoogleAIBackend}).\n *\n * @public\n */\nvar HarmBlockMethod;\n(function (HarmBlockMethod) {\n  /**\n   * The harm block method uses both probability and severity scores.\n   */\n  HarmBlockMethod[\"SEVERITY\"] = \"SEVERITY\";\n  /**\n   * The harm block method uses the probability score.\n   */\n  HarmBlockMethod[\"PROBABILITY\"] = \"PROBABILITY\";\n})(HarmBlockMethod || (HarmBlockMethod = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n  /**\n   * Content has a negligible chance of being unsafe.\n   */\n  HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n  /**\n   * Content has a low chance of being unsafe.\n   */\n  HarmProbability[\"LOW\"] = \"LOW\";\n  /**\n   * Content has a medium chance of being unsafe.\n   */\n  HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n  /**\n   * Content has a high chance of being unsafe.\n   */\n  HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Harm severity levels.\n * @public\n */\nvar HarmSeverity;\n(function (HarmSeverity) {\n  /**\n   * Negligible level of harm severity.\n   */\n  HarmSeverity[\"HARM_SEVERITY_NEGLIGIBLE\"] = \"HARM_SEVERITY_NEGLIGIBLE\";\n  /**\n   * Low level of harm severity.\n   */\n  HarmSeverity[\"HARM_SEVERITY_LOW\"] = \"HARM_SEVERITY_LOW\";\n  /**\n   * Medium level of harm severity.\n   */\n  HarmSeverity[\"HARM_SEVERITY_MEDIUM\"] = \"HARM_SEVERITY_MEDIUM\";\n  /**\n   * High level of harm severity.\n   */\n  HarmSeverity[\"HARM_SEVERITY_HIGH\"] = \"HARM_SEVERITY_HIGH\";\n  /**\n   * Harm severity is not supported.\n   *\n   * @remarks\n   * The GoogleAI backend does not support `HarmSeverity`, so this value is used as a fallback.\n   */\n  HarmSeverity[\"HARM_SEVERITY_UNSUPPORTED\"] = \"HARM_SEVERITY_UNSUPPORTED\";\n})(HarmSeverity || (HarmSeverity = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n  /**\n   * Content was blocked by safety settings.\n   */\n  BlockReason[\"SAFETY\"] = \"SAFETY\";\n  /**\n   * Content was blocked, but the reason is uncategorized.\n   */\n  BlockReason[\"OTHER\"] = \"OTHER\";\n  /**\n   * Content was blocked because it contained terms from the terminology blocklist.\n   */\n  BlockReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n  /**\n   * Content was blocked due to prohibited content.\n   */\n  BlockReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n  /**\n   * Natural stop point of the model or provided stop sequence.\n   */\n  FinishReason[\"STOP\"] = \"STOP\";\n  /**\n   * The maximum number of tokens as specified in the request was reached.\n   */\n  FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n  /**\n   * The candidate content was flagged for safety reasons.\n   */\n  FinishReason[\"SAFETY\"] = \"SAFETY\";\n  /**\n   * The candidate content was flagged for recitation reasons.\n   */\n  FinishReason[\"RECITATION\"] = \"RECITATION\";\n  /**\n   * Unknown reason.\n   */\n  FinishReason[\"OTHER\"] = \"OTHER\";\n  /**\n   * The candidate content contained forbidden terms.\n   */\n  FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n  /**\n   * The candidate content potentially contained prohibited content.\n   */\n  FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n  /**\n   * The candidate content potentially contained Sensitive Personally Identifiable Information (SPII).\n   */\n  FinishReason[\"SPII\"] = \"SPII\";\n  /**\n   * The function call generated by the model was invalid.\n   */\n  FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n})(FinishReason || (FinishReason = {}));\n/**\n * @public\n */\nvar FunctionCallingMode;\n(function (FunctionCallingMode) {\n  /**\n   * Default model behavior; model decides to predict either a function call\n   * or a natural language response.\n   */\n  FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n  /**\n   * Model is constrained to always predicting a function call only.\n   * If `allowed_function_names` is set, the predicted function call will be\n   * limited to any one of `allowed_function_names`, else the predicted\n   * function call will be any one of the provided `function_declarations`.\n   */\n  FunctionCallingMode[\"ANY\"] = \"ANY\";\n  /**\n   * Model will not predict any function call. Model behavior is same as when\n   * not passing any function declarations.\n   */\n  FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingMode || (FunctionCallingMode = {}));\n/**\n * Content part modality.\n * @public\n */\nvar Modality;\n(function (Modality) {\n  /**\n   * Unspecified modality.\n   */\n  Modality[\"MODALITY_UNSPECIFIED\"] = \"MODALITY_UNSPECIFIED\";\n  /**\n   * Plain text.\n   */\n  Modality[\"TEXT\"] = \"TEXT\";\n  /**\n   * Image.\n   */\n  Modality[\"IMAGE\"] = \"IMAGE\";\n  /**\n   * Video.\n   */\n  Modality[\"VIDEO\"] = \"VIDEO\";\n  /**\n   * Audio.\n   */\n  Modality[\"AUDIO\"] = \"AUDIO\";\n  /**\n   * Document (for example, PDF).\n   */\n  Modality[\"DOCUMENT\"] = \"DOCUMENT\";\n})(Modality || (Modality = {}));\n/**\n * Generation modalities to be returned in generation responses.\n *\n * @beta\n */\nconst ResponseModality = {\n  /**\n   * Text.\n   * @beta\n   */\n  TEXT: 'TEXT',\n  /**\n   * Image.\n   * @beta\n   */\n  IMAGE: 'IMAGE'\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Contains the list of OpenAPI data types\n * as defined by the\n * {@link https://swagger.io/docs/specification/data-models/data-types/ | OpenAPI specification}\n * @public\n */\nvar SchemaType;\n(function (SchemaType) {\n  /** String type. */\n  SchemaType[\"STRING\"] = \"string\";\n  /** Number type. */\n  SchemaType[\"NUMBER\"] = \"number\";\n  /** Integer type. */\n  SchemaType[\"INTEGER\"] = \"integer\";\n  /** Boolean type. */\n  SchemaType[\"BOOLEAN\"] = \"boolean\";\n  /** Array type. */\n  SchemaType[\"ARRAY\"] = \"array\";\n  /** Object type. */\n  SchemaType[\"OBJECT\"] = \"object\";\n})(SchemaType || (SchemaType = {}));\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A filter level controlling how aggressively to filter sensitive content.\n *\n * Text prompts provided as inputs and images (generated or uploaded) through Imagen on Vertex AI\n * are assessed against a list of safety filters, which include 'harmful categories' (for example,\n * `violence`, `sexual`, `derogatory`, and `toxic`). This filter level controls how aggressively to\n * filter out potentially harmful content from responses. See the {@link http://firebase.google.com/docs/vertex-ai/generate-images | documentation }\n * and the {@link https://cloud.google.com/vertex-ai/generative-ai/docs/image/responsible-ai-imagen#safety-filters | Responsible AI and usage guidelines}\n * for more details.\n *\n * @beta\n */\nvar ImagenSafetyFilterLevel;\n(function (ImagenSafetyFilterLevel) {\n  /**\n   * The most aggressive filtering level; most strict blocking.\n   */\n  ImagenSafetyFilterLevel[\"BLOCK_LOW_AND_ABOVE\"] = \"block_low_and_above\";\n  /**\n   * Blocks some sensitive prompts and responses.\n   */\n  ImagenSafetyFilterLevel[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"block_medium_and_above\";\n  /**\n   * Blocks few sensitive prompts and responses.\n   */\n  ImagenSafetyFilterLevel[\"BLOCK_ONLY_HIGH\"] = \"block_only_high\";\n  /**\n   * The least aggressive filtering level; blocks very few sensitive prompts and responses.\n   *\n   * Access to this feature is restricted and may require your case to be reviewed and approved by\n   * Cloud support.\n   */\n  ImagenSafetyFilterLevel[\"BLOCK_NONE\"] = \"block_none\";\n})(ImagenSafetyFilterLevel || (ImagenSafetyFilterLevel = {}));\n/**\n * A filter level controlling whether generation of images containing people or faces is allowed.\n *\n * See the <a href=\"http://firebase.google.com/docs/vertex-ai/generate-images\">personGeneration</a>\n * documentation for more details.\n *\n * @beta\n */\nvar ImagenPersonFilterLevel;\n(function (ImagenPersonFilterLevel) {\n  /**\n   * Disallow generation of images containing people or faces; images of people are filtered out.\n   */\n  ImagenPersonFilterLevel[\"BLOCK_ALL\"] = \"dont_allow\";\n  /**\n   * Allow generation of images containing adults only; images of children are filtered out.\n   *\n   * Generation of images containing people or faces may require your use case to be\n   * reviewed and approved by Cloud support; see the {@link https://cloud.google.com/vertex-ai/generative-ai/docs/image/responsible-ai-imagen#person-face-gen | Responsible AI and usage guidelines}\n   * for more details.\n   */\n  ImagenPersonFilterLevel[\"ALLOW_ADULT\"] = \"allow_adult\";\n  /**\n   * Allow generation of images containing adults only; images of children are filtered out.\n   *\n   * Generation of images containing people or faces may require your use case to be\n   * reviewed and approved by Cloud support; see the {@link https://cloud.google.com/vertex-ai/generative-ai/docs/image/responsible-ai-imagen#person-face-gen | Responsible AI and usage guidelines}\n   * for more details.\n   */\n  ImagenPersonFilterLevel[\"ALLOW_ALL\"] = \"allow_all\";\n})(ImagenPersonFilterLevel || (ImagenPersonFilterLevel = {}));\n/**\n * Aspect ratios for Imagen images.\n *\n * To specify an aspect ratio for generated images, set the `aspectRatio` property in your\n * {@link ImagenGenerationConfig}.\n *\n * See the the {@link http://firebase.google.com/docs/vertex-ai/generate-images | documentation }\n * for more details and examples of the supported aspect ratios.\n *\n * @beta\n */\nvar ImagenAspectRatio;\n(function (ImagenAspectRatio) {\n  /**\n   * Square (1:1) aspect ratio.\n   */\n  ImagenAspectRatio[\"SQUARE\"] = \"1:1\";\n  /**\n   * Landscape (3:4) aspect ratio.\n   */\n  ImagenAspectRatio[\"LANDSCAPE_3x4\"] = \"3:4\";\n  /**\n   * Portrait (4:3) aspect ratio.\n   */\n  ImagenAspectRatio[\"PORTRAIT_4x3\"] = \"4:3\";\n  /**\n   * Landscape (16:9) aspect ratio.\n   */\n  ImagenAspectRatio[\"LANDSCAPE_16x9\"] = \"16:9\";\n  /**\n   * Portrait (9:16) aspect ratio.\n   */\n  ImagenAspectRatio[\"PORTRAIT_9x16\"] = \"9:16\";\n})(ImagenAspectRatio || (ImagenAspectRatio = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An enum-like object containing constants that represent the supported backends\n * for the Firebase AI SDK.\n * This determines which backend service (Vertex AI Gemini API or Gemini Developer API)\n * the SDK will communicate with.\n *\n * These values are assigned to the `backendType` property within the specific backend\n * configuration objects ({@link GoogleAIBackend} or {@link VertexAIBackend}) to identify\n * which service to target.\n *\n * @public\n */\nconst BackendType = {\n  /**\n   * Identifies the backend service for the Vertex AI Gemini API provided through Google Cloud.\n   * Use this constant when creating a {@link VertexAIBackend} configuration.\n   */\n  VERTEX_AI: 'VERTEX_AI',\n  /**\n   * Identifies the backend service for the Gemini Developer API ({@link https://ai.google/ | Google AI}).\n   * Use this constant when creating a {@link GoogleAIBackend} configuration.\n   */\n  GOOGLE_AI: 'GOOGLE_AI'\n}; // Using 'as const' makes the string values literal types\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Abstract base class representing the configuration for an AI service backend.\n * This class should not be instantiated directly. Use its subclasses; {@link GoogleAIBackend} for\n * the Gemini Developer API (via {@link https://ai.google/ | Google AI}), and\n * {@link VertexAIBackend} for the Vertex AI Gemini API.\n *\n * @public\n */\nclass Backend {\n  /**\n   * Protected constructor for use by subclasses.\n   * @param type - The backend type.\n   */\n  constructor(type) {\n    this.backendType = type;\n  }\n}\n/**\n * Configuration class for the Gemini Developer API.\n *\n * Use this with {@link AIOptions} when initializing the AI service via\n * {@link getAI | getAI()} to specify the Gemini Developer API as the backend.\n *\n * @public\n */\nclass GoogleAIBackend extends Backend {\n  /**\n   * Creates a configuration object for the Gemini Developer API backend.\n   */\n  constructor() {\n    super(BackendType.GOOGLE_AI);\n  }\n}\n/**\n * Configuration class for the Vertex AI Gemini API.\n *\n * Use this with {@link AIOptions} when initializing the AI service via\n * {@link getAI | getAI()} to specify the Vertex AI Gemini API as the backend.\n *\n * @public\n */\nclass VertexAIBackend extends Backend {\n  /**\n   * Creates a configuration object for the Vertex AI backend.\n   *\n   * @param location - The region identifier, defaulting to `us-central1`;\n   * see {@link https://firebase.google.com/docs/vertex-ai/locations#available-locations | Vertex AI locations}\n   * for a list of supported locations.\n   */\n  constructor(location = DEFAULT_LOCATION) {\n    super(BackendType.VERTEX_AI);\n    if (!location) {\n      this.location = DEFAULT_LOCATION;\n    } else {\n      this.location = location;\n    }\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass AIService {\n  constructor(app, backend, authProvider, appCheckProvider) {\n    this.app = app;\n    this.backend = backend;\n    const appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({\n      optional: true\n    });\n    const auth = authProvider === null || authProvider === void 0 ? void 0 : authProvider.getImmediate({\n      optional: true\n    });\n    this.auth = auth || null;\n    this.appCheck = appCheck || null;\n    if (backend instanceof VertexAIBackend) {\n      this.location = backend.location;\n    } else {\n      this.location = '';\n    }\n  }\n  _delete() {\n    return Promise.resolve();\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error class for the Firebase AI SDK.\n *\n * @public\n */\nclass AIError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `AIError` class.\n   *\n   * @param code - The error code from {@link AIErrorCode}.\n   * @param message - A human-readable message describing the error.\n   * @param customErrorData - Optional error data.\n   */\n  constructor(code, message, customErrorData) {\n    // Match error format used by FirebaseError from ErrorFactory\n    const service = AI_TYPE;\n    const fullCode = `${service}/${code}`;\n    const fullMessage = `${service}: ${message} (${fullCode})`;\n    super(code, fullMessage);\n    this.code = code;\n    this.customErrorData = customErrorData;\n    // FirebaseError initializes a stack trace, but it assumes the error is created from the error\n    // factory. Since we break this assumption, we set the stack trace to be originating from this\n    // constructor.\n    // This is only supported in V8.\n    if (Error.captureStackTrace) {\n      // Allows us to initialize the stack trace without including the constructor itself at the\n      // top level of the stack trace.\n      Error.captureStackTrace(this, AIError);\n    }\n    // Allows instanceof AIError in ES5/ES6\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, AIError.prototype);\n    // Since Error is an interface, we don't inherit toString and so we define it ourselves.\n    this.toString = () => fullMessage;\n  }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encodes a {@link Backend} into a string that will be used to uniquely identify {@link AI}\n * instances by backend type.\n *\n * @internal\n */\nfunction encodeInstanceIdentifier(backend) {\n  if (backend instanceof GoogleAIBackend) {\n    return `${AI_TYPE}/googleai`;\n  } else if (backend instanceof VertexAIBackend) {\n    return `${AI_TYPE}/vertexai/${backend.location}`;\n  } else {\n    throw new AIError(\"error\" /* AIErrorCode.ERROR */, `Invalid backend: ${JSON.stringify(backend.backendType)}`);\n  }\n}\n/**\n * Decodes an instance identifier string into a {@link Backend}.\n *\n * @internal\n */\nfunction decodeInstanceIdentifier(instanceIdentifier) {\n  const identifierParts = instanceIdentifier.split('/');\n  if (identifierParts[0] !== AI_TYPE) {\n    throw new AIError(\"error\" /* AIErrorCode.ERROR */, `Invalid instance identifier, unknown prefix '${identifierParts[0]}'`);\n  }\n  const backendType = identifierParts[1];\n  switch (backendType) {\n    case 'vertexai':\n      const location = identifierParts[2];\n      if (!location) {\n        throw new AIError(\"error\" /* AIErrorCode.ERROR */, `Invalid instance identifier, unknown location '${instanceIdentifier}'`);\n      }\n      return new VertexAIBackend(location);\n    case 'googleai':\n      return new GoogleAIBackend();\n    default:\n      throw new AIError(\"error\" /* AIErrorCode.ERROR */, `Invalid instance identifier string: '${instanceIdentifier}'`);\n  }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Firebase AI model APIs.\n *\n * Instances of this class are associated with a specific Firebase AI {@link Backend}\n * and provide methods for interacting with the configured generative model.\n *\n * @public\n */\nclass AIModel {\n  /**\n   * Constructs a new instance of the {@link AIModel} class.\n   *\n   * This constructor should only be called from subclasses that provide\n   * a model API.\n   *\n   * @param ai - an {@link AI} instance.\n   * @param modelName - The name of the model being used. It can be in one of the following formats:\n   * - `my-model` (short name, will resolve to `publishers/google/models/my-model`)\n   * - `models/my-model` (will resolve to `publishers/google/models/my-model`)\n   * - `publishers/my-publisher/models/my-model` (fully qualified model name)\n   *\n   * @throws If the `apiKey` or `projectId` fields are missing in your\n   * Firebase config.\n   *\n   * @internal\n   */\n  constructor(ai, modelName) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!((_b = (_a = ai.app) === null || _a === void 0 ? void 0 : _a.options) === null || _b === void 0 ? void 0 : _b.apiKey)) {\n      throw new AIError(\"no-api-key\" /* AIErrorCode.NO_API_KEY */, `The \"apiKey\" field is empty in the local Firebase config. Firebase AI requires this field to contain a valid API key.`);\n    } else if (!((_d = (_c = ai.app) === null || _c === void 0 ? void 0 : _c.options) === null || _d === void 0 ? void 0 : _d.projectId)) {\n      throw new AIError(\"no-project-id\" /* AIErrorCode.NO_PROJECT_ID */, `The \"projectId\" field is empty in the local Firebase config. Firebase AI requires this field to contain a valid project ID.`);\n    } else if (!((_f = (_e = ai.app) === null || _e === void 0 ? void 0 : _e.options) === null || _f === void 0 ? void 0 : _f.appId)) {\n      throw new AIError(\"no-app-id\" /* AIErrorCode.NO_APP_ID */, `The \"appId\" field is empty in the local Firebase config. Firebase AI requires this field to contain a valid app ID.`);\n    } else {\n      this._apiSettings = {\n        apiKey: ai.app.options.apiKey,\n        project: ai.app.options.projectId,\n        appId: ai.app.options.appId,\n        automaticDataCollectionEnabled: ai.app.automaticDataCollectionEnabled,\n        location: ai.location,\n        backend: ai.backend\n      };\n      if (_isFirebaseServerApp(ai.app) && ai.app.settings.appCheckToken) {\n        const token = ai.app.settings.appCheckToken;\n        this._apiSettings.getAppCheckToken = () => {\n          return Promise.resolve({\n            token\n          });\n        };\n      } else if (ai.appCheck) {\n        this._apiSettings.getAppCheckToken = () => ai.appCheck.getToken();\n      }\n      if (ai.auth) {\n        this._apiSettings.getAuthToken = () => ai.auth.getToken();\n      }\n      this.model = AIModel.normalizeModelName(modelName, this._apiSettings.backend.backendType);\n    }\n  }\n  /**\n   * Normalizes the given model name to a fully qualified model resource name.\n   *\n   * @param modelName - The model name to normalize.\n   * @returns The fully qualified model resource name.\n   *\n   * @internal\n   */\n  static normalizeModelName(modelName, backendType) {\n    if (backendType === BackendType.GOOGLE_AI) {\n      return AIModel.normalizeGoogleAIModelName(modelName);\n    } else {\n      return AIModel.normalizeVertexAIModelName(modelName);\n    }\n  }\n  /**\n   * @internal\n   */\n  static normalizeGoogleAIModelName(modelName) {\n    return `models/${modelName}`;\n  }\n  /**\n   * @internal\n   */\n  static normalizeVertexAIModelName(modelName) {\n    let model;\n    if (modelName.includes('/')) {\n      if (modelName.startsWith('models/')) {\n        // Add 'publishers/google' if the user is only passing in 'models/model-name'.\n        model = `publishers/google/${modelName}`;\n      } else {\n        // Any other custom format (e.g. tuned models) must be passed in correctly.\n        model = modelName;\n      }\n    } else {\n      // If path is not included, assume it's a non-tuned model.\n      model = `publishers/google/models/${modelName}`;\n    }\n    return model;\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logger = new Logger('@firebase/vertexai');\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Task;\n(function (Task) {\n  Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n  Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n  Task[\"COUNT_TOKENS\"] = \"countTokens\";\n  Task[\"PREDICT\"] = \"predict\";\n})(Task || (Task = {}));\nclass RequestUrl {\n  constructor(model, task, apiSettings, stream, requestOptions) {\n    this.model = model;\n    this.task = task;\n    this.apiSettings = apiSettings;\n    this.stream = stream;\n    this.requestOptions = requestOptions;\n  }\n  toString() {\n    const url = new URL(this.baseUrl); // Throws if the URL is invalid\n    url.pathname = `/${this.apiVersion}/${this.modelPath}:${this.task}`;\n    url.search = this.queryParams.toString();\n    return url.toString();\n  }\n  get baseUrl() {\n    var _a;\n    return ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.baseUrl) || DEFAULT_BASE_URL;\n  }\n  get apiVersion() {\n    return DEFAULT_API_VERSION; // TODO: allow user-set options if that feature becomes available\n  }\n  get modelPath() {\n    if (this.apiSettings.backend instanceof GoogleAIBackend) {\n      return `projects/${this.apiSettings.project}/${this.model}`;\n    } else if (this.apiSettings.backend instanceof VertexAIBackend) {\n      return `projects/${this.apiSettings.project}/locations/${this.apiSettings.backend.location}/${this.model}`;\n    } else {\n      throw new AIError(\"error\" /* AIErrorCode.ERROR */, `Invalid backend: ${JSON.stringify(this.apiSettings.backend)}`);\n    }\n  }\n  get queryParams() {\n    const params = new URLSearchParams();\n    if (this.stream) {\n      params.set('alt', 'sse');\n    }\n    return params;\n  }\n}\n/**\n * Log language and \"fire/version\" to x-goog-api-client\n */\nfunction getClientHeaders() {\n  const loggingTags = [];\n  loggingTags.push(`${LANGUAGE_TAG}/${PACKAGE_VERSION}`);\n  loggingTags.push(`fire/${PACKAGE_VERSION}`);\n  return loggingTags.join(' ');\n}\nasync function getHeaders(url) {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('x-goog-api-client', getClientHeaders());\n  headers.append('x-goog-api-key', url.apiSettings.apiKey);\n  if (url.apiSettings.automaticDataCollectionEnabled) {\n    headers.append('X-Firebase-Appid', url.apiSettings.appId);\n  }\n  if (url.apiSettings.getAppCheckToken) {\n    const appCheckToken = await url.apiSettings.getAppCheckToken();\n    if (appCheckToken) {\n      headers.append('X-Firebase-AppCheck', appCheckToken.token);\n      if (appCheckToken.error) {\n        logger.warn(`Unable to obtain a valid App Check token: ${appCheckToken.error.message}`);\n      }\n    }\n  }\n  if (url.apiSettings.getAuthToken) {\n    const authToken = await url.apiSettings.getAuthToken();\n    if (authToken) {\n      headers.append('Authorization', `Firebase ${authToken.accessToken}`);\n    }\n  }\n  return headers;\n}\nasync function constructRequest(model, task, apiSettings, stream, body, requestOptions) {\n  const url = new RequestUrl(model, task, apiSettings, stream, requestOptions);\n  return {\n    url: url.toString(),\n    fetchOptions: {\n      method: 'POST',\n      headers: await getHeaders(url),\n      body\n    }\n  };\n}\nasync function makeRequest(model, task, apiSettings, stream, body, requestOptions) {\n  const url = new RequestUrl(model, task, apiSettings, stream, requestOptions);\n  let response;\n  let fetchTimeoutId;\n  try {\n    const request = await constructRequest(model, task, apiSettings, stream, body, requestOptions);\n    // Timeout is 180s by default\n    const timeoutMillis = (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) != null && requestOptions.timeout >= 0 ? requestOptions.timeout : DEFAULT_FETCH_TIMEOUT_MS;\n    const abortController = new AbortController();\n    fetchTimeoutId = setTimeout(() => abortController.abort(), timeoutMillis);\n    request.fetchOptions.signal = abortController.signal;\n    response = await fetch(request.url, request.fetchOptions);\n    if (!response.ok) {\n      let message = '';\n      let errorDetails;\n      try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n          message += ` ${JSON.stringify(json.error.details)}`;\n          errorDetails = json.error.details;\n        }\n      } catch (e) {\n        // ignored\n      }\n      if (response.status === 403 && errorDetails.some(detail => detail.reason === 'SERVICE_DISABLED') && errorDetails.some(detail => {\n        var _a, _b;\n        return (_b = (_a = detail.links) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.description.includes('Google developers console API activation');\n      })) {\n        throw new AIError(\"api-not-enabled\" /* AIErrorCode.API_NOT_ENABLED */, `The Firebase AI SDK requires the Firebase AI ` + `API ('firebasevertexai.googleapis.com') to be enabled in your ` + `Firebase project. Enable this API by visiting the Firebase Console ` + `at https://console.firebase.google.com/project/${url.apiSettings.project}/genai/ ` + `and clicking \"Get started\". If you enabled this API recently, ` + `wait a few minutes for the action to propagate to our systems and ` + `then retry.`, {\n          status: response.status,\n          statusText: response.statusText,\n          errorDetails\n        });\n      }\n      throw new AIError(\"fetch-error\" /* AIErrorCode.FETCH_ERROR */, `Error fetching from ${url}: [${response.status} ${response.statusText}] ${message}`, {\n        status: response.status,\n        statusText: response.statusText,\n        errorDetails\n      });\n    }\n  } catch (e) {\n    let err = e;\n    if (e.code !== \"fetch-error\" /* AIErrorCode.FETCH_ERROR */ && e.code !== \"api-not-enabled\" /* AIErrorCode.API_NOT_ENABLED */ && e instanceof Error) {\n      err = new AIError(\"error\" /* AIErrorCode.ERROR */, `Error fetching from ${url.toString()}: ${e.message}`);\n      err.stack = e.stack;\n    }\n    throw err;\n  } finally {\n    if (fetchTimeoutId) {\n      clearTimeout(fetchTimeoutId);\n    }\n  }\n  return response;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates an EnhancedGenerateContentResponse object that has helper functions and\n * other modifications that improve usability.\n */\nfunction createEnhancedContentResponse(response) {\n  /**\n   * The Vertex AI backend omits default values.\n   * This causes the `index` property to be omitted from the first candidate in the\n   * response, since it has index 0, and 0 is a default value.\n   * See: https://github.com/firebase/firebase-js-sdk/issues/8566\n   */\n  if (response.candidates && !response.candidates[0].hasOwnProperty('index')) {\n    response.candidates[0].index = 0;\n  }\n  const responseWithHelpers = addHelpers(response);\n  return responseWithHelpers;\n}\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n  response.text = () => {\n    if (response.candidates && response.candidates.length > 0) {\n      if (response.candidates.length > 1) {\n        logger.warn(`This response had ${response.candidates.length} ` + `candidates. Returning text from the first candidate only. ` + `Access response.candidates directly to use the other candidates.`);\n      }\n      if (hadBadFinishReason(response.candidates[0])) {\n        throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Response error: ${formatBlockErrorMessage(response)}. Response body stored in error.response`, {\n          response\n        });\n      }\n      return getText(response);\n    } else if (response.promptFeedback) {\n      throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Text not available. ${formatBlockErrorMessage(response)}`, {\n        response\n      });\n    }\n    return '';\n  };\n  response.inlineDataParts = () => {\n    if (response.candidates && response.candidates.length > 0) {\n      if (response.candidates.length > 1) {\n        logger.warn(`This response had ${response.candidates.length} ` + `candidates. Returning data from the first candidate only. ` + `Access response.candidates directly to use the other candidates.`);\n      }\n      if (hadBadFinishReason(response.candidates[0])) {\n        throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Response error: ${formatBlockErrorMessage(response)}. Response body stored in error.response`, {\n          response\n        });\n      }\n      return getInlineDataParts(response);\n    } else if (response.promptFeedback) {\n      throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Data not available. ${formatBlockErrorMessage(response)}`, {\n        response\n      });\n    }\n    return undefined;\n  };\n  response.functionCalls = () => {\n    if (response.candidates && response.candidates.length > 0) {\n      if (response.candidates.length > 1) {\n        logger.warn(`This response had ${response.candidates.length} ` + `candidates. Returning function calls from the first candidate only. ` + `Access response.candidates directly to use the other candidates.`);\n      }\n      if (hadBadFinishReason(response.candidates[0])) {\n        throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Response error: ${formatBlockErrorMessage(response)}. Response body stored in error.response`, {\n          response\n        });\n      }\n      return getFunctionCalls(response);\n    } else if (response.promptFeedback) {\n      throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Function call not available. ${formatBlockErrorMessage(response)}`, {\n        response\n      });\n    }\n    return undefined;\n  };\n  return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n  var _a, _b, _c, _d;\n  const textStrings = [];\n  if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n    for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n      if (part.text) {\n        textStrings.push(part.text);\n      }\n    }\n  }\n  if (textStrings.length > 0) {\n    return textStrings.join('');\n  } else {\n    return '';\n  }\n}\n/**\n * Returns {@link FunctionCall}s associated with first candidate.\n */\nfunction getFunctionCalls(response) {\n  var _a, _b, _c, _d;\n  const functionCalls = [];\n  if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n    for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n      if (part.functionCall) {\n        functionCalls.push(part.functionCall);\n      }\n    }\n  }\n  if (functionCalls.length > 0) {\n    return functionCalls;\n  } else {\n    return undefined;\n  }\n}\n/**\n * Returns {@link InlineDataPart}s in the first candidate if present.\n *\n * @internal\n */\nfunction getInlineDataParts(response) {\n  var _a, _b, _c, _d;\n  const data = [];\n  if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n    for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n      if (part.inlineData) {\n        data.push(part);\n      }\n    }\n  }\n  if (data.length > 0) {\n    return data;\n  } else {\n    return undefined;\n  }\n}\nconst badFinishReasons = [FinishReason.RECITATION, FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n  return !!candidate.finishReason && badFinishReasons.includes(candidate.finishReason);\n}\nfunction formatBlockErrorMessage(response) {\n  var _a, _b, _c;\n  let message = '';\n  if ((!response.candidates || response.candidates.length === 0) && response.promptFeedback) {\n    message += 'Response was blocked';\n    if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n      message += ` due to ${response.promptFeedback.blockReason}`;\n    }\n    if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n      message += `: ${response.promptFeedback.blockReasonMessage}`;\n    }\n  } else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n    const firstCandidate = response.candidates[0];\n    if (hadBadFinishReason(firstCandidate)) {\n      message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n      if (firstCandidate.finishMessage) {\n        message += `: ${firstCandidate.finishMessage}`;\n      }\n    }\n  }\n  return message;\n}\n/**\n * Convert a generic successful fetch response body to an Imagen response object\n * that can be returned to the user. This converts the REST APIs response format to our\n * APIs representation of a response.\n *\n * @internal\n */\nasync function handlePredictResponse(response) {\n  var _a;\n  const responseJson = await response.json();\n  const images = [];\n  let filteredReason = undefined;\n  // The backend should always send a non-empty array of predictions if the response was successful.\n  if (!responseJson.predictions || ((_a = responseJson.predictions) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n    throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, 'No predictions or filtered reason received from Vertex AI. Please report this issue with the full error details at https://github.com/firebase/firebase-js-sdk/issues.');\n  }\n  for (const prediction of responseJson.predictions) {\n    if (prediction.raiFilteredReason) {\n      filteredReason = prediction.raiFilteredReason;\n    } else if (prediction.mimeType && prediction.bytesBase64Encoded) {\n      images.push({\n        mimeType: prediction.mimeType,\n        bytesBase64Encoded: prediction.bytesBase64Encoded\n      });\n    } else if (prediction.mimeType && prediction.gcsUri) {\n      images.push({\n        mimeType: prediction.mimeType,\n        gcsURI: prediction.gcsUri\n      });\n    } else {\n      throw new AIError(\"response-error\" /* AIErrorCode.RESPONSE_ERROR */, `Predictions array in response has missing properties. Response: ${JSON.stringify(responseJson)}`);\n    }\n  }\n  return {\n    images,\n    filteredReason\n  };\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * This SDK supports both the Vertex AI Gemini API and the Gemini Developer API (using Google AI).\n * The public API prioritizes the format used by the Vertex AI Gemini API.\n * We avoid having two sets of types by translating requests and responses between the two API formats.\n * This translation allows developers to switch between the Vertex AI Gemini API and the Gemini Developer API\n * with minimal code changes.\n *\n * In here are functions that map requests and responses between the two API formats.\n * Requests in the Vertex AI format are mapped to the Google AI format before being sent.\n * Responses from the Google AI backend are mapped back to the Vertex AI format before being returned to the user.\n */\n/**\n * Maps a Vertex AI {@link GenerateContentRequest} to a format that can be sent to Google AI.\n *\n * @param generateContentRequest The {@link GenerateContentRequest} to map.\n * @returns A {@link GenerateContentResponse} that conforms to the Google AI format.\n *\n * @throws If the request contains properties that are unsupported by Google AI.\n *\n * @internal\n */\nfunction mapGenerateContentRequest(generateContentRequest) {\n  var _a, _b;\n  (_a = generateContentRequest.safetySettings) === null || _a === void 0 ? void 0 : _a.forEach(safetySetting => {\n    if (safetySetting.method) {\n      throw new AIError(\"unsupported\" /* AIErrorCode.UNSUPPORTED */, 'SafetySetting.method is not supported in the the Gemini Developer API. Please remove this property.');\n    }\n  });\n  if ((_b = generateContentRequest.generationConfig) === null || _b === void 0 ? void 0 : _b.topK) {\n    const roundedTopK = Math.round(generateContentRequest.generationConfig.topK);\n    if (roundedTopK !== generateContentRequest.generationConfig.topK) {\n      logger.warn('topK in GenerationConfig has been rounded to the nearest integer to match the format for requests to the Gemini Developer API.');\n      generateContentRequest.generationConfig.topK = roundedTopK;\n    }\n  }\n  return generateContentRequest;\n}\n/**\n * Maps a {@link GenerateContentResponse} from Google AI to the format of the\n * {@link GenerateContentResponse} that we get from VertexAI that is exposed in the public API.\n *\n * @param googleAIResponse The {@link GenerateContentResponse} from Google AI.\n * @returns A {@link GenerateContentResponse} that conforms to the public API's format.\n *\n * @internal\n */\nfunction mapGenerateContentResponse(googleAIResponse) {\n  const generateContentResponse = {\n    candidates: googleAIResponse.candidates ? mapGenerateContentCandidates(googleAIResponse.candidates) : undefined,\n    prompt: googleAIResponse.promptFeedback ? mapPromptFeedback(googleAIResponse.promptFeedback) : undefined,\n    usageMetadata: googleAIResponse.usageMetadata\n  };\n  return generateContentResponse;\n}\n/**\n * Maps a Vertex AI {@link CountTokensRequest} to a format that can be sent to Google AI.\n *\n * @param countTokensRequest The {@link CountTokensRequest} to map.\n * @param model The model to count tokens with.\n * @returns A {@link CountTokensRequest} that conforms to the Google AI format.\n *\n * @internal\n */\nfunction mapCountTokensRequest(countTokensRequest, model) {\n  const mappedCountTokensRequest = {\n    generateContentRequest: Object.assign({\n      model\n    }, countTokensRequest)\n  };\n  return mappedCountTokensRequest;\n}\n/**\n * Maps a Google AI {@link GoogleAIGenerateContentCandidate} to a format that conforms\n * to the Vertex AI API format.\n *\n * @param candidates The {@link GoogleAIGenerateContentCandidate} to map.\n * @returns A {@link GenerateContentCandidate} that conforms to the Vertex AI format.\n *\n * @throws If any {@link Part} in the candidates has a `videoMetadata` property.\n *\n * @internal\n */\nfunction mapGenerateContentCandidates(candidates) {\n  const mappedCandidates = [];\n  let mappedSafetyRatings;\n  if (mappedCandidates) {\n    candidates.forEach(candidate => {\n      var _a;\n      // Map citationSources to citations.\n      let citationMetadata;\n      if (candidate.citationMetadata) {\n        citationMetadata = {\n          citations: candidate.citationMetadata.citationSources\n        };\n      }\n      // Assign missing candidate SafetyRatings properties to their defaults if undefined.\n      if (candidate.safetyRatings) {\n        mappedSafetyRatings = candidate.safetyRatings.map(safetyRating => {\n          var _a, _b, _c;\n          return Object.assign(Object.assign({}, safetyRating), {\n            severity: (_a = safetyRating.severity) !== null && _a !== void 0 ? _a : HarmSeverity.HARM_SEVERITY_UNSUPPORTED,\n            probabilityScore: (_b = safetyRating.probabilityScore) !== null && _b !== void 0 ? _b : 0,\n            severityScore: (_c = safetyRating.severityScore) !== null && _c !== void 0 ? _c : 0\n          });\n        });\n      }\n      // videoMetadata is not supported.\n      // Throw early since developers may send a long video as input and only expect to pay\n      // for inference on a small portion of the video.\n      if ((_a = candidate.content) === null || _a === void 0 ? void 0 : _a.parts.some(part => part === null || part === void 0 ? void 0 : part.videoMetadata)) {\n        throw new AIError(\"unsupported\" /* AIErrorCode.UNSUPPORTED */, 'Part.videoMetadata is not supported in the Gemini Developer API. Please remove this property.');\n      }\n      const mappedCandidate = {\n        index: candidate.index,\n        content: candidate.content,\n        finishReason: candidate.finishReason,\n        finishMessage: candidate.finishMessage,\n        safetyRatings: mappedSafetyRatings,\n        citationMetadata,\n        groundingMetadata: candidate.groundingMetadata\n      };\n      mappedCandidates.push(mappedCandidate);\n    });\n  }\n  return mappedCandidates;\n}\nfunction mapPromptFeedback(promptFeedback) {\n  // Assign missing SafetyRating properties to their defaults if undefined.\n  const mappedSafetyRatings = [];\n  promptFeedback.safetyRatings.forEach(safetyRating => {\n    var _a, _b, _c;\n    mappedSafetyRatings.push({\n      category: safetyRating.category,\n      probability: safetyRating.probability,\n      severity: (_a = safetyRating.severity) !== null && _a !== void 0 ? _a : HarmSeverity.HARM_SEVERITY_UNSUPPORTED,\n      probabilityScore: (_b = safetyRating.probabilityScore) !== null && _b !== void 0 ? _b : 0,\n      severityScore: (_c = safetyRating.severityScore) !== null && _c !== void 0 ? _c : 0,\n      blocked: safetyRating.blocked\n    });\n  });\n  const mappedPromptFeedback = {\n    blockReason: promptFeedback.blockReason,\n    safetyRatings: mappedSafetyRatings,\n    blockReasonMessage: promptFeedback.blockReasonMessage\n  };\n  return mappedPromptFeedback;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response, apiSettings) {\n  const inputStream = response.body.pipeThrough(new TextDecoderStream('utf8', {\n    fatal: true\n  }));\n  const responseStream = getResponseStream(inputStream);\n  const [stream1, stream2] = responseStream.tee();\n  return {\n    stream: generateResponseSequence(stream1, apiSettings),\n    response: getResponsePromise(stream2, apiSettings)\n  };\n}\nasync function getResponsePromise(stream, apiSettings) {\n  const allResponses = [];\n  const reader = stream.getReader();\n  while (true) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (done) {\n      let generateContentResponse = aggregateResponses(allResponses);\n      if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n        generateContentResponse = mapGenerateContentResponse(generateContentResponse);\n      }\n      return createEnhancedContentResponse(generateContentResponse);\n    }\n    allResponses.push(value);\n  }\n}\nfunction generateResponseSequence(stream, apiSettings) {\n  return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n    const reader = stream.getReader();\n    while (true) {\n      const {\n        value,\n        done\n      } = yield __await(reader.read());\n      if (done) {\n        break;\n      }\n      let enhancedResponse;\n      if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n        enhancedResponse = createEnhancedContentResponse(mapGenerateContentResponse(value));\n      } else {\n        enhancedResponse = createEnhancedContentResponse(value);\n      }\n      yield yield __await(enhancedResponse);\n    }\n  });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n  const reader = inputStream.getReader();\n  const stream = new ReadableStream({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      function pump() {\n        return reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            if (currentText.trim()) {\n              controller.error(new AIError(\"parse-failed\" /* AIErrorCode.PARSE_FAILED */, 'Failed to parse stream'));\n              return;\n            }\n            controller.close();\n            return;\n          }\n          currentText += value;\n          let match = currentText.match(responseLineRE);\n          let parsedResponse;\n          while (match) {\n            try {\n              parsedResponse = JSON.parse(match[1]);\n            } catch (e) {\n              controller.error(new AIError(\"parse-failed\" /* AIErrorCode.PARSE_FAILED */, `Error parsing JSON response: \"${match[1]}`));\n              return;\n            }\n            controller.enqueue(parsedResponse);\n            currentText = currentText.substring(match[0].length);\n            match = currentText.match(responseLineRE);\n          }\n          return pump();\n        });\n      }\n    }\n  });\n  return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n  const lastResponse = responses[responses.length - 1];\n  const aggregatedResponse = {\n    promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback\n  };\n  for (const response of responses) {\n    if (response.candidates) {\n      for (const candidate of response.candidates) {\n        // Index will be undefined if it's the first index (0), so we should use 0 if it's undefined.\n        // See: https://github.com/firebase/firebase-js-sdk/issues/8566\n        const i = candidate.index || 0;\n        if (!aggregatedResponse.candidates) {\n          aggregatedResponse.candidates = [];\n        }\n        if (!aggregatedResponse.candidates[i]) {\n          aggregatedResponse.candidates[i] = {\n            index: candidate.index\n          };\n        }\n        // Keep overwriting, the last one will be final\n        aggregatedResponse.candidates[i].citationMetadata = candidate.citationMetadata;\n        aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n        aggregatedResponse.candidates[i].finishMessage = candidate.finishMessage;\n        aggregatedResponse.candidates[i].safetyRatings = candidate.safetyRatings;\n        /**\n         * Candidates should always have content and parts, but this handles\n         * possible malformed responses.\n         */\n        if (candidate.content && candidate.content.parts) {\n          if (!aggregatedResponse.candidates[i].content) {\n            aggregatedResponse.candidates[i].content = {\n              role: candidate.content.role || 'user',\n              parts: []\n            };\n          }\n          const newPart = {};\n          for (const part of candidate.content.parts) {\n            if (part.text !== undefined) {\n              // The backend can send empty text parts. If these are sent back\n              // (e.g. in chat history), the backend will respond with an error.\n              // To prevent this, ignore empty text parts.\n              if (part.text === '') {\n                continue;\n              }\n              newPart.text = part.text;\n            }\n            if (part.functionCall) {\n              newPart.functionCall = part.functionCall;\n            }\n            if (Object.keys(newPart).length === 0) {\n              throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, 'Part should have at least one property, but there are none. This is likely caused ' + 'by a malformed response from the backend.');\n            }\n            aggregatedResponse.candidates[i].content.parts.push(newPart);\n          }\n        }\n      }\n    }\n  }\n  return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiSettings, model, params, requestOptions) {\n  if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n    params = mapGenerateContentRequest(params);\n  }\n  const response = await makeRequest(model, Task.STREAM_GENERATE_CONTENT, apiSettings, /* stream */true, JSON.stringify(params), requestOptions);\n  return processStream(response, apiSettings); // TODO: Map streaming responses\n}\nasync function generateContent(apiSettings, model, params, requestOptions) {\n  if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n    params = mapGenerateContentRequest(params);\n  }\n  const response = await makeRequest(model, Task.GENERATE_CONTENT, apiSettings, /* stream */false, JSON.stringify(params), requestOptions);\n  const generateContentResponse = await processGenerateContentResponse(response, apiSettings);\n  const enhancedResponse = createEnhancedContentResponse(generateContentResponse);\n  return {\n    response: enhancedResponse\n  };\n}\nasync function processGenerateContentResponse(response, apiSettings) {\n  const responseJson = await response.json();\n  if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n    return mapGenerateContentResponse(responseJson);\n  } else {\n    return responseJson;\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n  // null or undefined\n  if (input == null) {\n    return undefined;\n  } else if (typeof input === 'string') {\n    return {\n      role: 'system',\n      parts: [{\n        text: input\n      }]\n    };\n  } else if (input.text) {\n    return {\n      role: 'system',\n      parts: [input]\n    };\n  } else if (input.parts) {\n    if (!input.role) {\n      return {\n        role: 'system',\n        parts: input.parts\n      };\n    } else {\n      return input;\n    }\n  }\n}\nfunction formatNewContent(request) {\n  let newParts = [];\n  if (typeof request === 'string') {\n    newParts = [{\n      text: request\n    }];\n  } else {\n    for (const partOrString of request) {\n      if (typeof partOrString === 'string') {\n        newParts.push({\n          text: partOrString\n        });\n      } else {\n        newParts.push(partOrString);\n      }\n    }\n  }\n  return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n  const userContent = {\n    role: 'user',\n    parts: []\n  };\n  const functionContent = {\n    role: 'function',\n    parts: []\n  };\n  let hasUserContent = false;\n  let hasFunctionContent = false;\n  for (const part of parts) {\n    if ('functionResponse' in part) {\n      functionContent.parts.push(part);\n      hasFunctionContent = true;\n    } else {\n      userContent.parts.push(part);\n      hasUserContent = true;\n    }\n  }\n  if (hasUserContent && hasFunctionContent) {\n    throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, 'Within a single message, FunctionResponse cannot be mixed with other type of Part in the request for sending chat message.');\n  }\n  if (!hasUserContent && !hasFunctionContent) {\n    throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, 'No Content is provided for sending chat message.');\n  }\n  if (hasUserContent) {\n    return userContent;\n  }\n  return functionContent;\n}\nfunction formatGenerateContentInput(params) {\n  let formattedRequest;\n  if (params.contents) {\n    formattedRequest = params;\n  } else {\n    // Array or string\n    const content = formatNewContent(params);\n    formattedRequest = {\n      contents: [content]\n    };\n  }\n  if (params.systemInstruction) {\n    formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n  }\n  return formattedRequest;\n}\n/**\n * Convert the user-defined parameters in {@link ImagenGenerationParams} to the format\n * that is expected from the REST API.\n *\n * @internal\n */\nfunction createPredictRequestBody(prompt, {\n  gcsURI,\n  imageFormat,\n  addWatermark,\n  numberOfImages = 1,\n  negativePrompt,\n  aspectRatio,\n  safetyFilterLevel,\n  personFilterLevel\n}) {\n  // Properties that are undefined will be omitted from the JSON string that is sent in the request.\n  const body = {\n    instances: [{\n      prompt\n    }],\n    parameters: {\n      storageUri: gcsURI,\n      negativePrompt,\n      sampleCount: numberOfImages,\n      aspectRatio,\n      outputOptions: imageFormat,\n      addWatermark,\n      safetyFilterLevel,\n      personGeneration: personFilterLevel,\n      includeRaiReason: true\n    }\n  };\n  return body;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = ['text', 'inlineData', 'functionCall', 'functionResponse'];\nconst VALID_PARTS_PER_ROLE = {\n  user: ['text', 'inlineData'],\n  function: ['functionResponse'],\n  model: ['text', 'functionCall'],\n  // System instructions shouldn't be in history anyway.\n  system: ['text']\n};\nconst VALID_PREVIOUS_CONTENT_ROLES = {\n  user: ['model'],\n  function: ['model'],\n  model: ['user', 'function'],\n  // System instructions shouldn't be in history.\n  system: []\n};\nfunction validateChatHistory(history) {\n  let prevContent = null;\n  for (const currContent of history) {\n    const {\n      role,\n      parts\n    } = currContent;\n    if (!prevContent && role !== 'user') {\n      throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `First Content should be with role 'user', got ${role}`);\n    }\n    if (!POSSIBLE_ROLES.includes(role)) {\n      throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n    }\n    if (!Array.isArray(parts)) {\n      throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `Content should have 'parts' but property with an array of Parts`);\n    }\n    if (parts.length === 0) {\n      throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `Each Content should have at least one part`);\n    }\n    const countFields = {\n      text: 0,\n      inlineData: 0,\n      functionCall: 0,\n      functionResponse: 0\n    };\n    for (const part of parts) {\n      for (const key of VALID_PART_FIELDS) {\n        if (key in part) {\n          countFields[key] += 1;\n        }\n      }\n    }\n    const validParts = VALID_PARTS_PER_ROLE[role];\n    for (const key of VALID_PART_FIELDS) {\n      if (!validParts.includes(key) && countFields[key] > 0) {\n        throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `Content with role '${role}' can't contain '${key}' part`);\n      }\n    }\n    if (prevContent) {\n      const validPreviousContentRoles = VALID_PREVIOUS_CONTENT_ROLES[role];\n      if (!validPreviousContentRoles.includes(prevContent.role)) {\n        throw new AIError(\"invalid-content\" /* AIErrorCode.INVALID_CONTENT */, `Content with role '${role}' can't follow '${prevContent.role}'. Valid previous roles: ${JSON.stringify(VALID_PREVIOUS_CONTENT_ROLES)}`);\n      }\n    }\n    prevContent = currContent;\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = 'SILENT_ERROR';\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n  constructor(apiSettings, model, params, requestOptions) {\n    this.model = model;\n    this.params = params;\n    this.requestOptions = requestOptions;\n    this._history = [];\n    this._sendPromise = Promise.resolve();\n    this._apiSettings = apiSettings;\n    if (params === null || params === void 0 ? void 0 : params.history) {\n      validateChatHistory(params.history);\n      this._history = params.history;\n    }\n  }\n  /**\n   * Gets the chat history so far. Blocked prompts are not added to history.\n   * Neither blocked candidates nor the prompts that generated them are added\n   * to history.\n   */\n  async getHistory() {\n    await this._sendPromise;\n    return this._history;\n  }\n  /**\n   * Sends a chat message and receives a non-streaming\n   * {@link GenerateContentResult}\n   */\n  async sendMessage(request) {\n    var _a, _b, _c, _d, _e;\n    await this._sendPromise;\n    const newContent = formatNewContent(request);\n    const generateContentRequest = {\n      safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n      generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n      tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n      toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n      systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n      contents: [...this._history, newContent]\n    };\n    let finalResult = {};\n    // Add onto the chain.\n    this._sendPromise = this._sendPromise.then(() => generateContent(this._apiSettings, this.model, generateContentRequest, this.requestOptions)).then(result => {\n      var _a, _b;\n      if (result.response.candidates && result.response.candidates.length > 0) {\n        this._history.push(newContent);\n        const responseContent = {\n          parts: ((_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content.parts) || [],\n          // Response seems to come back without a role set.\n          role: ((_b = result.response.candidates) === null || _b === void 0 ? void 0 : _b[0].content.role) || 'model'\n        };\n        this._history.push(responseContent);\n      } else {\n        const blockErrorMessage = formatBlockErrorMessage(result.response);\n        if (blockErrorMessage) {\n          logger.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n        }\n      }\n      finalResult = result;\n    });\n    await this._sendPromise;\n    return finalResult;\n  }\n  /**\n   * Sends a chat message and receives the response as a\n   * {@link GenerateContentStreamResult} containing an iterable stream\n   * and a response promise.\n   */\n  async sendMessageStream(request) {\n    var _a, _b, _c, _d, _e;\n    await this._sendPromise;\n    const newContent = formatNewContent(request);\n    const generateContentRequest = {\n      safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n      generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n      tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n      toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n      systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n      contents: [...this._history, newContent]\n    };\n    const streamPromise = generateContentStream(this._apiSettings, this.model, generateContentRequest, this.requestOptions);\n    // Add onto the chain.\n    this._sendPromise = this._sendPromise.then(() => streamPromise)\n    // This must be handled to avoid unhandled rejection, but jump\n    // to the final catch block with a label to not log this error.\n    .catch(_ignored => {\n      throw new Error(SILENT_ERROR);\n    }).then(streamResult => streamResult.response).then(response => {\n      if (response.candidates && response.candidates.length > 0) {\n        this._history.push(newContent);\n        const responseContent = Object.assign({}, response.candidates[0].content);\n        // Response seems to come back without a role set.\n        if (!responseContent.role) {\n          responseContent.role = 'model';\n        }\n        this._history.push(responseContent);\n      } else {\n        const blockErrorMessage = formatBlockErrorMessage(response);\n        if (blockErrorMessage) {\n          logger.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n        }\n      }\n    }).catch(e => {\n      // Errors in streamPromise are already catchable by the user as\n      // streamPromise is returned.\n      // Avoid duplicating the error message in logs.\n      if (e.message !== SILENT_ERROR) {\n        // Users do not have access to _sendPromise to catch errors\n        // downstream from streamPromise, so they should not throw.\n        logger.error(e);\n      }\n    });\n    return streamPromise;\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiSettings, model, params, requestOptions) {\n  let body = '';\n  if (apiSettings.backend.backendType === BackendType.GOOGLE_AI) {\n    const mappedParams = mapCountTokensRequest(params, model);\n    body = JSON.stringify(mappedParams);\n  } else {\n    body = JSON.stringify(params);\n  }\n  const response = await makeRequest(model, Task.COUNT_TOKENS, apiSettings, false, body, requestOptions);\n  return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel extends AIModel {\n  constructor(ai, modelParams, requestOptions) {\n    super(ai, modelParams.model);\n    this.generationConfig = modelParams.generationConfig || {};\n    this.safetySettings = modelParams.safetySettings || [];\n    this.tools = modelParams.tools;\n    this.toolConfig = modelParams.toolConfig;\n    this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n    this.requestOptions = requestOptions || {};\n  }\n  /**\n   * Makes a single non-streaming call to the model\n   * and returns an object containing a single {@link GenerateContentResponse}.\n   */\n  async generateContent(request) {\n    const formattedParams = formatGenerateContentInput(request);\n    return generateContent(this._apiSettings, this.model, Object.assign({\n      generationConfig: this.generationConfig,\n      safetySettings: this.safetySettings,\n      tools: this.tools,\n      toolConfig: this.toolConfig,\n      systemInstruction: this.systemInstruction\n    }, formattedParams), this.requestOptions);\n  }\n  /**\n   * Makes a single streaming call to the model\n   * and returns an object containing an iterable stream that iterates\n   * over all chunks in the streaming response as well as\n   * a promise that returns the final aggregated response.\n   */\n  async generateContentStream(request) {\n    const formattedParams = formatGenerateContentInput(request);\n    return generateContentStream(this._apiSettings, this.model, Object.assign({\n      generationConfig: this.generationConfig,\n      safetySettings: this.safetySettings,\n      tools: this.tools,\n      toolConfig: this.toolConfig,\n      systemInstruction: this.systemInstruction\n    }, formattedParams), this.requestOptions);\n  }\n  /**\n   * Gets a new {@link ChatSession} instance which can be used for\n   * multi-turn chats.\n   */\n  startChat(startChatParams) {\n    return new ChatSession(this._apiSettings, this.model, Object.assign({\n      tools: this.tools,\n      toolConfig: this.toolConfig,\n      systemInstruction: this.systemInstruction,\n      generationConfig: this.generationConfig,\n      safetySettings: this.safetySettings\n    }, startChatParams), this.requestOptions);\n  }\n  /**\n   * Counts the tokens in the provided request.\n   */\n  async countTokens(request) {\n    const formattedParams = formatGenerateContentInput(request);\n    return countTokens(this._apiSettings, this.model, formattedParams);\n  }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for Imagen model APIs.\n *\n * This class provides methods for generating images using the Imagen model.\n *\n * @example\n * ```javascript\n * const imagen = new ImagenModel(\n *   ai,\n *   {\n *     model: 'imagen-3.0-generate-002'\n *   }\n * );\n *\n * const response = await imagen.generateImages('A photo of a cat');\n * if (response.images.length > 0) {\n *   console.log(response.images[0].bytesBase64Encoded);\n * }\n * ```\n *\n * @beta\n */\nclass ImagenModel extends AIModel {\n  /**\n   * Constructs a new instance of the {@link ImagenModel} class.\n   *\n   * @param ai - an {@link AI} instance.\n   * @param modelParams - Parameters to use when making requests to Imagen.\n   * @param requestOptions - Additional options to use when making requests.\n   *\n   * @throws If the `apiKey` or `projectId` fields are missing in your\n   * Firebase config.\n   */\n  constructor(ai, modelParams, requestOptions) {\n    const {\n      model,\n      generationConfig,\n      safetySettings\n    } = modelParams;\n    super(ai, model);\n    this.requestOptions = requestOptions;\n    this.generationConfig = generationConfig;\n    this.safetySettings = safetySettings;\n  }\n  /**\n   * Generates images using the Imagen model and returns them as\n   * base64-encoded strings.\n   *\n   * @param prompt - A text prompt describing the image(s) to generate.\n   * @returns A promise that resolves to an {@link ImagenGenerationResponse}\n   * object containing the generated images.\n   *\n   * @throws If the request to generate images fails. This happens if the\n   * prompt is blocked.\n   *\n   * @remarks\n   * If the prompt was not blocked, but one or more of the generated images were filtered, the\n   * returned object will have a `filteredReason` property.\n   * If all images are filtered, the `images` array will be empty.\n   *\n   * @beta\n   */\n  async generateImages(prompt) {\n    const body = createPredictRequestBody(prompt, Object.assign(Object.assign({}, this.generationConfig), this.safetySettings));\n    const response = await makeRequest(this.model, Task.PREDICT, this._apiSettings, /* stream */false, JSON.stringify(body), this.requestOptions);\n    return handlePredictResponse(response);\n  }\n  /**\n   * Generates images to Cloud Storage for Firebase using the Imagen model.\n   *\n   * @internal This method is temporarily internal.\n   *\n   * @param prompt - A text prompt describing the image(s) to generate.\n   * @param gcsURI - The URI of file stored in a Cloud Storage for Firebase bucket.\n   * This should be a directory. For example, `gs://my-bucket/my-directory/`.\n   * @returns A promise that resolves to an {@link ImagenGenerationResponse}\n   * object containing the URLs of the generated images.\n   *\n   * @throws If the request fails to generate images fails. This happens if\n   * the prompt is blocked.\n   *\n   * @remarks\n   * If the prompt was not blocked, but one or more of the generated images were filtered, the\n   * returned object will have a `filteredReason` property.\n   * If all images are filtered, the `images` array will be empty.\n   */\n  async generateImagesGCS(prompt, gcsURI) {\n    const body = createPredictRequestBody(prompt, Object.assign(Object.assign({\n      gcsURI\n    }, this.generationConfig), this.safetySettings));\n    const response = await makeRequest(this.model, Task.PREDICT, this._apiSettings, /* stream */false, JSON.stringify(body), this.requestOptions);\n    return handlePredictResponse(response);\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Parent class encompassing all Schema types, with static methods that\n * allow building specific Schema types. This class can be converted with\n * `JSON.stringify()` into a JSON string accepted by Vertex AI REST endpoints.\n * (This string conversion is automatically done when calling SDK methods.)\n * @public\n */\nclass Schema {\n  constructor(schemaParams) {\n    // eslint-disable-next-line guard-for-in\n    for (const paramKey in schemaParams) {\n      this[paramKey] = schemaParams[paramKey];\n    }\n    // Ensure these are explicitly set to avoid TS errors.\n    this.type = schemaParams.type;\n    this.nullable = schemaParams.hasOwnProperty('nullable') ? !!schemaParams.nullable : false;\n  }\n  /**\n   * Defines how this Schema should be serialized as JSON.\n   * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n   * @internal\n   */\n  toJSON() {\n    const obj = {\n      type: this.type\n    };\n    for (const prop in this) {\n      if (this.hasOwnProperty(prop) && this[prop] !== undefined) {\n        if (prop !== 'required' || this.type === SchemaType.OBJECT) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n    return obj;\n  }\n  static array(arrayParams) {\n    return new ArraySchema(arrayParams, arrayParams.items);\n  }\n  static object(objectParams) {\n    return new ObjectSchema(objectParams, objectParams.properties, objectParams.optionalProperties);\n  }\n  // eslint-disable-next-line id-blacklist\n  static string(stringParams) {\n    return new StringSchema(stringParams);\n  }\n  static enumString(stringParams) {\n    return new StringSchema(stringParams, stringParams.enum);\n  }\n  static integer(integerParams) {\n    return new IntegerSchema(integerParams);\n  }\n  // eslint-disable-next-line id-blacklist\n  static number(numberParams) {\n    return new NumberSchema(numberParams);\n  }\n  // eslint-disable-next-line id-blacklist\n  static boolean(booleanParams) {\n    return new BooleanSchema(booleanParams);\n  }\n}\n/**\n * Schema class for \"integer\" types.\n * @public\n */\nclass IntegerSchema extends Schema {\n  constructor(schemaParams) {\n    super(Object.assign({\n      type: SchemaType.INTEGER\n    }, schemaParams));\n  }\n}\n/**\n * Schema class for \"number\" types.\n * @public\n */\nclass NumberSchema extends Schema {\n  constructor(schemaParams) {\n    super(Object.assign({\n      type: SchemaType.NUMBER\n    }, schemaParams));\n  }\n}\n/**\n * Schema class for \"boolean\" types.\n * @public\n */\nclass BooleanSchema extends Schema {\n  constructor(schemaParams) {\n    super(Object.assign({\n      type: SchemaType.BOOLEAN\n    }, schemaParams));\n  }\n}\n/**\n * Schema class for \"string\" types. Can be used with or without\n * enum values.\n * @public\n */\nclass StringSchema extends Schema {\n  constructor(schemaParams, enumValues) {\n    super(Object.assign({\n      type: SchemaType.STRING\n    }, schemaParams));\n    this.enum = enumValues;\n  }\n  /**\n   * @internal\n   */\n  toJSON() {\n    const obj = super.toJSON();\n    if (this.enum) {\n      obj['enum'] = this.enum;\n    }\n    return obj;\n  }\n}\n/**\n * Schema class for \"array\" types.\n * The `items` param should refer to the type of item that can be a member\n * of the array.\n * @public\n */\nclass ArraySchema extends Schema {\n  constructor(schemaParams, items) {\n    super(Object.assign({\n      type: SchemaType.ARRAY\n    }, schemaParams));\n    this.items = items;\n  }\n  /**\n   * @internal\n   */\n  toJSON() {\n    const obj = super.toJSON();\n    obj.items = this.items.toJSON();\n    return obj;\n  }\n}\n/**\n * Schema class for \"object\" types.\n * The `properties` param must be a map of `Schema` objects.\n * @public\n */\nclass ObjectSchema extends Schema {\n  constructor(schemaParams, properties, optionalProperties = []) {\n    super(Object.assign({\n      type: SchemaType.OBJECT\n    }, schemaParams));\n    this.properties = properties;\n    this.optionalProperties = optionalProperties;\n  }\n  /**\n   * @internal\n   */\n  toJSON() {\n    const obj = super.toJSON();\n    obj.properties = Object.assign({}, this.properties);\n    const required = [];\n    if (this.optionalProperties) {\n      for (const propertyKey of this.optionalProperties) {\n        if (!this.properties.hasOwnProperty(propertyKey)) {\n          throw new AIError(\"invalid-schema\" /* AIErrorCode.INVALID_SCHEMA */, `Property \"${propertyKey}\" specified in \"optionalProperties\" does not exist.`);\n        }\n      }\n    }\n    for (const propertyKey in this.properties) {\n      if (this.properties.hasOwnProperty(propertyKey)) {\n        obj.properties[propertyKey] = this.properties[propertyKey].toJSON();\n        if (!this.optionalProperties.includes(propertyKey)) {\n          required.push(propertyKey);\n        }\n      }\n    }\n    if (required.length > 0) {\n      obj.required = required;\n    }\n    delete obj.optionalProperties;\n    return obj;\n  }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the image format for images generated by Imagen.\n *\n * Use this class to specify the desired format (JPEG or PNG) and compression quality\n * for images generated by Imagen. This is typically included as part of\n * {@link ImagenModelParams}.\n *\n * @example\n * ```javascript\n * const imagenModelParams = {\n *   // ... other ImagenModelParams\n *   imageFormat: ImagenImageFormat.jpeg(75) // JPEG with a compression level of 75.\n * }\n * ```\n *\n * @beta\n */\nclass ImagenImageFormat {\n  constructor() {\n    this.mimeType = 'image/png';\n  }\n  /**\n   * Creates an {@link ImagenImageFormat} for a JPEG image.\n   *\n   * @param compressionQuality - The level of compression (a number between 0 and 100).\n   * @returns An {@link ImagenImageFormat} object for a JPEG image.\n   *\n   * @beta\n   */\n  static jpeg(compressionQuality) {\n    if (compressionQuality && (compressionQuality < 0 || compressionQuality > 100)) {\n      logger.warn(`Invalid JPEG compression quality of ${compressionQuality} specified; the supported range is [0, 100].`);\n    }\n    return {\n      mimeType: 'image/jpeg',\n      compressionQuality\n    };\n  }\n  /**\n   * Creates an {@link ImagenImageFormat} for a PNG image.\n   *\n   * @returns An {@link ImagenImageFormat} object for a PNG image.\n   *\n   * @beta\n   */\n  static png() {\n    return {\n      mimeType: 'image/png'\n    };\n  }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated Use the new {@link AIModel} instead. The Vertex AI in Firebase SDK has been\n * replaced with the Firebase AI SDK to accommodate the evolving set of supported features and\n * services. For migration details, see the {@link https://firebase.google.com/docs/vertex-ai/migrate-to-latest-sdk | migration guide}.\n *\n * Base class for Firebase AI model APIs.\n *\n * @public\n */\nconst VertexAIModel = AIModel;\n/**\n * @deprecated Use the new {@link AIError} instead. The Vertex AI in Firebase SDK has been\n * replaced with the Firebase AI SDK to accommodate the evolving set of supported features and\n * services. For migration details, see the {@link https://firebase.google.com/docs/vertex-ai/migrate-to-latest-sdk | migration guide}.\n *\n * Error class for the Firebase AI SDK.\n *\n * @public\n */\nconst VertexAIError = AIError;\n/**\n * @deprecated Use the new {@link getAI | getAI()} instead. The Vertex AI in Firebase SDK has been\n * replaced with the Firebase AI SDK to accommodate the evolving set of supported features and\n * services. For migration details, see the {@link https://firebase.google.com/docs/vertex-ai/migrate-to-latest-sdk | migration guide}.\n *\n * Returns a {@link VertexAI} instance for the given app, configured to use the\n * Vertex AI Gemini API. This instance will be\n * configured to use the Vertex AI Gemini API.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param options - Options to configure the Vertex AI instance, including the location.\n *\n * @public\n */\nfunction getVertexAI(app = getApp(), options) {\n  app = getModularInstance(app);\n  // Dependencies\n  const AIProvider = _getProvider(app, AI_TYPE);\n  const backend = new VertexAIBackend(options === null || options === void 0 ? void 0 : options.location);\n  const identifier = encodeInstanceIdentifier(backend);\n  return AIProvider.getImmediate({\n    identifier\n  });\n}\n/**\n * Returns the default {@link AI} instance that is associated with the provided\n * {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new instance with the\n * default settings.\n *\n * @example\n * ```javascript\n * const ai = getAI(app);\n * ```\n *\n * @example\n * ```javascript\n * // Get an AI instance configured to use the Gemini Developer API (via Google AI).\n * const ai = getAI(app, { backend: new GoogleAIBackend() });\n * ```\n *\n * @example\n * ```javascript\n * // Get an AI instance configured to use the Vertex AI Gemini API.\n * const ai = getAI(app, { backend: new VertexAIBackend() });\n * ```\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param options - {@link AIOptions} that configure the AI instance.\n * @returns The default {@link AI} instance for the given {@link @firebase/app#FirebaseApp}.\n *\n * @public\n */\nfunction getAI(app = getApp(), options = {\n  backend: new GoogleAIBackend()\n}) {\n  app = getModularInstance(app);\n  // Dependencies\n  const AIProvider = _getProvider(app, AI_TYPE);\n  const identifier = encodeInstanceIdentifier(options.backend);\n  return AIProvider.getImmediate({\n    identifier\n  });\n}\n/**\n * Returns a {@link GenerativeModel} class with methods for inference\n * and other functionality.\n *\n * @public\n */\nfunction getGenerativeModel(ai, modelParams, requestOptions) {\n  if (!modelParams.model) {\n    throw new AIError(\"no-model\" /* AIErrorCode.NO_MODEL */, `Must provide a model name. Example: getGenerativeModel({ model: 'my-model-name' })`);\n  }\n  return new GenerativeModel(ai, modelParams, requestOptions);\n}\n/**\n * Returns an {@link ImagenModel} class with methods for using Imagen.\n *\n * Only Imagen 3 models (named `imagen-3.0-*`) are supported.\n *\n * @param ai - An {@link AI} instance.\n * @param modelParams - Parameters to use when making Imagen requests.\n * @param requestOptions - Additional options to use when making requests.\n *\n * @throws If the `apiKey` or `projectId` fields are missing in your\n * Firebase config.\n *\n * @beta\n */\nfunction getImagenModel(ai, modelParams, requestOptions) {\n  if (!modelParams.model) {\n    throw new AIError(\"no-model\" /* AIErrorCode.NO_MODEL */, `Must provide a model name. Example: getImagenModel({ model: 'my-model-name' })`);\n  }\n  return new ImagenModel(ai, modelParams, requestOptions);\n}\n\n/**\n * The Firebase AI Web SDK.\n *\n * @packageDocumentation\n */\nfunction registerAI() {\n  _registerComponent(new Component(AI_TYPE, (container, {\n    instanceIdentifier\n  }) => {\n    if (!instanceIdentifier) {\n      throw new AIError(\"error\" /* AIErrorCode.ERROR */, 'AIService instance identifier is undefined.');\n    }\n    const backend = decodeInstanceIdentifier(instanceIdentifier);\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app').getImmediate();\n    const auth = container.getProvider('auth-internal');\n    const appCheckProvider = container.getProvider('app-check-internal');\n    return new AIService(app, backend, auth, appCheckProvider);\n  }, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\nregisterAI();\nexport { AIError, AIModel, ArraySchema, Backend, BackendType, BlockReason, BooleanSchema, ChatSession, FinishReason, FunctionCallingMode, GenerativeModel, GoogleAIBackend, HarmBlockMethod, HarmBlockThreshold, HarmCategory, HarmProbability, HarmSeverity, ImagenAspectRatio, ImagenImageFormat, ImagenModel, ImagenPersonFilterLevel, ImagenSafetyFilterLevel, IntegerSchema, Modality, NumberSchema, ObjectSchema, POSSIBLE_ROLES, ResponseModality, Schema, SchemaType, StringSchema, VertexAIBackend, VertexAIError, VertexAIModel, getAI, getGenerativeModel, getImagenModel, getVertexAI };\n", "import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { registerVersion } from 'firebase/app';\nimport { getAI as getAI$1, getGenerativeModel as getGenerativeModel$1, getImagenModel as getImagenModel$1, getVertexAI as getVertexAI$1 } from 'firebase/ai';\nexport * from 'firebase/ai';\nclass AI {\n  constructor(ai) {\n    return ai;\n  }\n}\nconst AI_PROVIDER_NAME = 'AI';\nclass AIInstances {\n  constructor() {\n    return _getAllInstancesOf(AI_PROVIDER_NAME);\n  }\n}\nconst AIInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(AI_PROVIDER_NAME))), distinct());\nconst PROVIDED_AI_INSTANCES = new InjectionToken('angularfire2.ai-instances');\nfunction defaultAIInstanceFactory(provided, defaultApp) {\n  const defaultAI = _getDefaultInstanceOf(AI_PROVIDER_NAME, provided, defaultApp);\n  return defaultAI && new AI(defaultAI);\n}\nfunction AIInstanceFactory(fn) {\n  return (zone, injector) => {\n    const ai = zone.runOutsideAngular(() => fn(injector));\n    return new AI(ai);\n  };\n}\nconst AI_INSTANCES_PROVIDER = {\n  provide: AIInstances,\n  deps: [[new Optional(), PROVIDED_AI_INSTANCES]]\n};\nconst DEFAULT_AI_INSTANCE_PROVIDER = {\n  provide: AI,\n  useFactory: defaultAIInstanceFactory,\n  deps: [[new Optional(), PROVIDED_AI_INSTANCES], FirebaseApp]\n};\nclass AIModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'ai');\n  }\n  static ɵfac = function AIModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AIModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AIModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_AI_INSTANCE_PROVIDER, AI_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AIModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_AI_INSTANCE_PROVIDER, AI_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideAI(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'ai');\n  return makeEnvironmentProviders([DEFAULT_AI_INSTANCE_PROVIDER, AI_INSTANCES_PROVIDER, {\n    provide: PROVIDED_AI_INSTANCES,\n    useFactory: AIInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps, [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getAI = _zoneWrap(getAI$1, true);\nconst getGenerativeModel = _zoneWrap(getGenerativeModel$1, true);\nconst getImagenModel = _zoneWrap(getImagenModel$1, true);\nconst getVertexAI = _zoneWrap(getVertexAI$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AI, AIInstance$, AIInstances, AIModule, getAI, getGenerativeModel, getImagenModel, getVertexAI, provideAI };\n"],
  "mappings": "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",
  "names": ["HarmCategory", "HarmBlockThreshold", "HarmBlockMethod", "HarmProbability", "HarmSeverity", "BlockReason", "FinishReason", "FunctionCallingMode", "Modality", "SchemaType", "ImagenSafetyFilterLevel", "ImagenPersonFilterLevel", "ImagenAspectRatio", "Task", "_a", "_b", "getAI", "getGenerativeModel", "getImagenModel", "getVertexAI"]
}
